services:
  db:
    image: postgres:16
    container_name: prueba_tecnica_postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    container_name: prueba_tecnica_backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    working_dir: /app
    command: >
      sh -c "until nc -z db 5432; do echo 'Waiting for DB...'; sleep 1; done;
             echo 'DB ready, running migrations...';
             python -m alembic upgrade head &&
             python -m app.seed_data &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build: ./frontend
    container_name: prueba_tecnica_frontend
    restart: always
    depends_on:
      - backend
    env_file:
      - .env
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

volumes:
  postgres_data:
